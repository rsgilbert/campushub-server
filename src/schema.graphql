type Query {
    test: String!
    items: [Item!]!
    stock: [Item!]
    stockItem(id: ID!): Item
    item(id: ID!): Item
    uploads: [File]
    images(id: ID!): [Image]
}

type Mutation {
    item(
        id: ID,
        name: String,
        price: Int,
        description: String,
        category: String,
        inStock: Boolean
    ): Item

    signup(
        email: String!,
        password: String!
    ): AuthPayload

    login(
        email: String!,
        password: String!
    ): AuthPayload

    upload(
        id: ID!,
        file: Upload!
    ): Image
}

type Item {
    id: ID!
    name: String
    price: Int
    description: String
    category: String
    inStock: Boolean
    images: [Image!]
    user: User
}

type User {
    id: ID!
    email: String
    password: String
    items: [Item!]!
}


type AuthPayload {
    token: String
    user: User
}

type Image {
    id: ID!
    src: String
}

type File {
  filename: String!
  mimetype: String!
  encoding: String!
}
